"""
Helper functions to improve readability of model-generated text
"""

import re
import textwrap


def clean_children_gpt2(model_text, trim_dangling=True):
    """
    Clean text generated by GPT2 fine-tuned on the bAbI CPT text. Optionally
    trim dangling final lines
    """

    model_text = model_text.rstrip()
    model_text = re.sub(r"`` ", "-DQ-", model_text)
    model_text = re.sub(r"` ", "-SQ-", model_text)
    model_text = re.sub(r" ''", "-DQ-", model_text)
    model_text = re.sub(r" '", "-SQ-", model_text)
    model_text = re.sub("-DQ-", '"', model_text)
    model_text = re.sub("-SQ-", "'", model_text)
    model_text = re.sub(r"([,?!.]['\"])(\w)", "\g<1> \g<2>", model_text)

    if trim_dangling:
        last_line_idx = model_text.rfind("\n")
        print(f"Last line: {model_text[last_line_idx+1:]}")
        if not re.search(r"[.!?][\"']?$", model_text[last_line_idx + 1 :]):
            return model_text[:last_line_idx]

    return model_text


def wrap_print(cleaned_text, width=90):
    """
    Convenience function to nicely wrap and print cleaned text
    """
    for line in cleaned_text.split("\n"):
        print(*textwrap.wrap(line, width=width), sep="\n")
